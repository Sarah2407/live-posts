## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User Management'
description: |-

  APIs to manage user resource
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the users.'
      description: 'Gets a list of users'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"name":null,"email":"sara@gmail.com","created_at":"2022-10-16T10:38:16.000000Z","updated_at":"2022-10-16T10:38:16.000000Z"},{"id":2,"name":null,"email":"chris@gmail.com","created_at":"2022-10-16T10:38:42.000000Z","updated_at":"2022-10-16T10:38:42.000000Z"},{"id":4,"name":null,"email":"gloria1@gmail.com","created_at":"2022-10-16T16:22:49.000000Z","updated_at":"2022-10-16T16:24:24.000000Z"},{"id":8,"name":null,"email":"ewuraa@gmail.com","created_at":"2022-10-17T07:33:46.000000Z","updated_at":"2022-10-17T07:33:46.000000Z"}],"links":{"first":"http:\/\/localhost\/api\/users?page=1","last":"http:\/\/localhost\/api\/users?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/users?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/users","per_page":10,"to":4,"total":4}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'User ID'
        required: true
        example: 3
        type: integer
        custom: []
    cleanUrlParameters:
      id: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"name":null,"email":"sara@gmail.com","created_at":"2022-10-16T10:38:16.000000Z","updated_at":"2022-10-16T10:38:16.000000Z"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '58'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created user in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the user. Example John Mensah'
        required: true
        example: consequatur
        type: string
        custom: []
      email:
        name: email
        description: 'Email of the user. Example john@gmail.com'
        required: true
        example: aut
        type: string
        custom: []
    cleanBodyParameters:
      name: consequatur
      email: aut
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/users/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified user from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": "delete successful"
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
